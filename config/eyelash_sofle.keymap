#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include "alias_sofle.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

// Homerow mods

#define HRM_BEHAVIOR "balanced"
#define HRM_TAPPING_TERM_MS 280
#define HRM_REQUIRE_PRIOR_IDLE_MS 150
#define HRM_QUICK_TAP_MS 175

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
        label = "SCROLL_ENCODER";
    };

    hml: homerow_mods_left {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS_LEFT";
        flavor =
        HRM_BEHAVIOR;
        tapping-term-ms = <HRM_TAPPING_TERM_MS>;
        quick-tap-ms = <HRM_QUICK_TAP_MS>;
        require-prior-idle-ms = <150>;
        hold-trigger-key-positions = <KEYS_R KEYS_T>;
        hold-trigger-on-release;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };

    hmr: homerow_mods_right {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS_RIGHT";
        flavor =
        HRM_BEHAVIOR;
        tapping-term-ms = <HRM_TAPPING_TERM_MS>;
        quick-tap-ms = <HRM_QUICK_TAP_MS>;
        require-prior-idle-ms = <150>;
        hold-trigger-key-positions = <KEYS_L KEYS_T>;
        hold-trigger-on-release;
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;
    };

    exlamation_question_mark: exlamation_question_mark {
        compatible = "zmk,behavior-mod-morph";
        label = "EXLAMATION_QUESTION_MARK";
        bindings = <&kp LS(NUMBER_1)>, <&kp LS(KP_MINUS)>;

        #binding-cells = <0>;
        mods = <(MOD_LSFT)>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            bindings = <
&kp GRAVE               &kp N1                &kp N2                    &kp N3           &kp N4             &kp N5       &kp UP_ARROW     &kp N6       &kp N7             &kp N8           &kp N9            &kp N0               &kp RIGHT_BRACKET
&caps_word              &kp Q                 &kp W                     &kp F            &kp P              &kp B        &kp DOWN_ARROW   &kp J        &kp L              &kp U            &kp Y             &kp LBKT             &kp SQT
&sk LEFT_SHIFT          &hml LEFT_CONTROL A   &hml LEFT_ALT R           &hml LEFT_GUI S  &hml LEFT_SHIFT T  &kp G        &kp LEFT_ARROW   &kp M        &hmr LEFT_SHIFT N  &hmr LEFT_GUI E  &hmr LEFT_ALT I   &hmr LEFT_CONTROL O  &kp SEMI
&mt LEFT_GUI BACKSLASH  &kp Z                 &kp X                     &kp C            &kp D              &kp V        &kp RIGHT_ARROW  &kp K        &kp H              &kp COMMA        &kp DOT           &kp FSLH             &exlamation_question_mark
&kp C_MUTE              &kp NON_US_BACKSLASH  &kp LS(NON_US_BACKSLASH)  &lt 5 ESC        &lt 1 SPACE        &lt 4 TAB    &kp ENTER        &lt 3 ENTER  &lt 2 BACKSPACE    &lt 6 DELETE     &kp LA(NUMBER_8)  &kp LA(NUMBER_9)
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "DEFAULT";
        };

        LAYER1 {
            bindings = <
&trans        &kp F1            &kp F2        &kp F3        &kp F4                &kp F5       &mmv MOVE_UP     &kp F6      &kp F7    &kp F8         &kp F9        &kp F10    &trans
&trans        &trans            &mkp LCLK     &mkp MCLK     &mkp RCLK             &kp LG(X)    &mmv MOVE_DOWN   &trans      &trans    &trans         &trans        &trans     &trans
&kp TAB       &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &kp LEFT_SHIFT        &kp LG(C)    &mmv MOVE_LEFT   &kp LG(A)   &kp LEFT  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &trans
&kp LC(SEMI)  &kp LG(A)         &kp LG(X)     &kp LG(C)     &kp LG(LS(NUMBER_4))  &kp LG(V)    &mmv MOVE_RIGHT  &kp INSERT  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &trans
&kp C_MUTE    &trans            &trans        &trans        &none                 &trans       &mkp LCLK        &trans      &trans    &trans         &trans        &trans
            >;

            display-name = "LAYER1";
            sensor-bindings = <&scroll_encoder>;
        };

        LAYER2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &none   &trans      &trans     &trans
            >;

            display-name = "LAYER2";
            sensor-bindings = <&scroll_encoder>;
        };

        LAYER3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "LAYER3";
            sensor-bindings = <&scroll_encoder>;
        };

        LAYER4 {
            bindings = <
&trans                        &trans                        &trans                        &trans                        &trans                        &trans                      &trans  &trans                &trans                    &trans                          &trans                        &trans                     &trans
&kp LS(LA(LG(V)))             &kp LS(LA(LC(LG(NUMBER_1))))  &kp LS(LA(LC(LG(NUMBER_2))))  &kp LS(LA(LC(LG(NUMBER_3))))  &kp LS(LA(LC(LG(NUMBER_4))))  &kp LS(LA(LC(LG(N5))))      &trans  &trans                &trans                    &trans                          &trans                        &trans                     &trans
&kp LS(LA(LG(N0)))            &kp LS(LA(LG(NUMBER_1)))      &kp LS(LA(LG(NUMBER_2)))      &kp LS(LA(LG(NUMBER_3)))      &kp LS(LA(LG(NUMBER_4)))      &kp LS(LA(LG(NUMBER_5)))    &trans  &kp LS(LA(LG(LEFT)))  &kp LS(LA(LC(LG(LEFT))))  &kp LC(LG(LA(LS(DOWN_ARROW))))  &kp LS(LA(LG(LC(UP_ARROW))))  &kp LS(LA(LC(LG(RIGHT))))  &kp LS(LA(LG(RIGHT)))
&kp LS(LA(LG(LC(NUMBER_6))))  &kp LS(LA(LC(LG(N0))))        &kp LS(LA(LG(NUMBER_6)))      &kp LS(LA(LG(N7)))            &kp LS(LA(LG(N8)))            &kp LS(LA(LG(N9)))          &trans  &kp LS(LA(LG(N)))     &kp LS(LC(LA(LG(M))))     &kp LS(LA(LG(C)))               &kp LS(LA(LC(LG(R))))         &trans                     &trans
&trans                        &trans                        &trans                        &trans                        &trans                        &none                       &trans  &kp LG(W)             &kp LG(LA(H))             &kp LG(H)                       &trans                        &trans
            >;

            display-name = "LAYER4";
            sensor-bindings = <&scroll_encoder>;
        };

        LAYER5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_VOLUME_UP     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_VOL_DN        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_REWIND        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_FAST_FORWARD  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &none   &trans  &trans    &kp C_PLAY_PAUSE    &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "LAYER5";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        LAYER6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "LAYER6";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
